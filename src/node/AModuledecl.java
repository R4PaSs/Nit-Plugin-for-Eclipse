/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AModuledecl extends PModuledecl
{
    private PDoc _doc_;
    private TKwmodule _kwmodule_;
    private PModuleName _name_;

    public AModuledecl()
    {
        // Constructor
    }

    public AModuledecl(
        @SuppressWarnings("hiding") PDoc _doc_,
        @SuppressWarnings("hiding") TKwmodule _kwmodule_,
        @SuppressWarnings("hiding") PModuleName _name_)
    {
        // Constructor
        setDoc(_doc_);

        setKwmodule(_kwmodule_);

        setName(_name_);

    }

    @Override
    public Object clone()
    {
        return new AModuledecl(
            cloneNode(this._doc_),
            cloneNode(this._kwmodule_),
            cloneNode(this._name_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAModuledecl(this);
    }

    public PDoc getDoc()
    {
        return this._doc_;
    }

    public void setDoc(PDoc node)
    {
        if(this._doc_ != null)
        {
            this._doc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._doc_ = node;
    }

    public TKwmodule getKwmodule()
    {
        return this._kwmodule_;
    }

    public void setKwmodule(TKwmodule node)
    {
        if(this._kwmodule_ != null)
        {
            this._kwmodule_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._kwmodule_ = node;
    }

    public PModuleName getName()
    {
        return this._name_;
    }

    public void setName(PModuleName node)
    {
        if(this._name_ != null)
        {
            this._name_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._name_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._doc_)
            + toString(this._kwmodule_)
            + toString(this._name_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._doc_ == child)
        {
            this._doc_ = null;
            return;
        }

        if(this._kwmodule_ == child)
        {
            this._kwmodule_ = null;
            return;
        }

        if(this._name_ == child)
        {
            this._name_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._doc_ == oldChild)
        {
            setDoc((PDoc) newChild);
            return;
        }

        if(this._kwmodule_ == oldChild)
        {
            setKwmodule((TKwmodule) newChild);
            return;
        }

        if(this._name_ == oldChild)
        {
            setName((PModuleName) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
