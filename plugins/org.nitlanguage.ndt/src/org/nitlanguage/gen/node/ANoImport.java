/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.nitlanguage.gen.node;

import org.nitlanguage.gen.analysis.Analysis;

@SuppressWarnings("nls")
public final class ANoImport extends PImport
{
    private PVisibility _visibility_;
    private TKwimport _kwimport_;
    private TKwend _kwend_;

    public ANoImport()
    {
        // Constructor
    }

    public ANoImport(
        @SuppressWarnings("hiding") PVisibility _visibility_,
        @SuppressWarnings("hiding") TKwimport _kwimport_,
        @SuppressWarnings("hiding") TKwend _kwend_)
    {
        // Constructor
        setVisibility(_visibility_);

        setKwimport(_kwimport_);

        setKwend(_kwend_);

    }

    @Override
    public Object clone()
    {
        return new ANoImport(
            cloneNode(this._visibility_),
            cloneNode(this._kwimport_),
            cloneNode(this._kwend_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANoImport(this);
    }

    public PVisibility getVisibility()
    {
        return this._visibility_;
    }

    public void setVisibility(PVisibility node)
    {
        if(this._visibility_ != null)
        {
            this._visibility_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._visibility_ = node;
    }

    public TKwimport getKwimport()
    {
        return this._kwimport_;
    }

    public void setKwimport(TKwimport node)
    {
        if(this._kwimport_ != null)
        {
            this._kwimport_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._kwimport_ = node;
    }

    public TKwend getKwend()
    {
        return this._kwend_;
    }

    public void setKwend(TKwend node)
    {
        if(this._kwend_ != null)
        {
            this._kwend_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._kwend_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._visibility_)
            + toString(this._kwimport_)
            + toString(this._kwend_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._visibility_ == child)
        {
            this._visibility_ = null;
            return;
        }

        if(this._kwimport_ == child)
        {
            this._kwimport_ = null;
            return;
        }

        if(this._kwend_ == child)
        {
            this._kwend_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._visibility_ == oldChild)
        {
            setVisibility((PVisibility) newChild);
            return;
        }

        if(this._kwimport_ == oldChild)
        {
            setKwimport((TKwimport) newChild);
            return;
        }

        if(this._kwend_ == oldChild)
        {
            setKwend((TKwend) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
