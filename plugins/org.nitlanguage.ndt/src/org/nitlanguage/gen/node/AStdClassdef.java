/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.nitlanguage.gen.node;

import java.util.*;

import org.nitlanguage.gen.analysis.*;

@SuppressWarnings("nls")
public final class AStdClassdef extends PClassdef
{
    private PDoc _doc_;
    private TKwredef _kwredef_;
    private PVisibility _visibility_;
    private PClasskind _classkind_;
    private TClassid _id_;
    private final LinkedList<PFormaldef> _formaldefs_ = new LinkedList<PFormaldef>();
    private final LinkedList<PSuperclass> _superclasses_ = new LinkedList<PSuperclass>();
    private final LinkedList<PPropdef> _propdefs_ = new LinkedList<PPropdef>();
    private TKwend _kwend_;

    public AStdClassdef()
    {
        // Constructor
    }

    public AStdClassdef(
        @SuppressWarnings("hiding") PDoc _doc_,
        @SuppressWarnings("hiding") TKwredef _kwredef_,
        @SuppressWarnings("hiding") PVisibility _visibility_,
        @SuppressWarnings("hiding") PClasskind _classkind_,
        @SuppressWarnings("hiding") TClassid _id_,
        @SuppressWarnings("hiding") List<PFormaldef> _formaldefs_,
        @SuppressWarnings("hiding") List<PSuperclass> _superclasses_,
        @SuppressWarnings("hiding") List<PPropdef> _propdefs_,
        @SuppressWarnings("hiding") TKwend _kwend_)
    {
        // Constructor
        setDoc(_doc_);

        setKwredef(_kwredef_);

        setVisibility(_visibility_);

        setClasskind(_classkind_);

        setId(_id_);

        setFormaldefs(_formaldefs_);

        setSuperclasses(_superclasses_);

        setPropdefs(_propdefs_);

        setKwend(_kwend_);

    }

    @Override
    public Object clone()
    {
        return new AStdClassdef(
            cloneNode(this._doc_),
            cloneNode(this._kwredef_),
            cloneNode(this._visibility_),
            cloneNode(this._classkind_),
            cloneNode(this._id_),
            cloneList(this._formaldefs_),
            cloneList(this._superclasses_),
            cloneList(this._propdefs_),
            cloneNode(this._kwend_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStdClassdef(this);
    }

    public PDoc getDoc()
    {
        return this._doc_;
    }

    public void setDoc(PDoc node)
    {
        if(this._doc_ != null)
        {
            this._doc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._doc_ = node;
    }

    public TKwredef getKwredef()
    {
        return this._kwredef_;
    }

    public void setKwredef(TKwredef node)
    {
        if(this._kwredef_ != null)
        {
            this._kwredef_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._kwredef_ = node;
    }

    public PVisibility getVisibility()
    {
        return this._visibility_;
    }

    public void setVisibility(PVisibility node)
    {
        if(this._visibility_ != null)
        {
            this._visibility_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._visibility_ = node;
    }

    public PClasskind getClasskind()
    {
        return this._classkind_;
    }

    public void setClasskind(PClasskind node)
    {
        if(this._classkind_ != null)
        {
            this._classkind_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._classkind_ = node;
    }

    public TClassid getId()
    {
        return this._id_;
    }

    public void setId(TClassid node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public LinkedList<PFormaldef> getFormaldefs()
    {
        return this._formaldefs_;
    }

    public void setFormaldefs(List<PFormaldef> list)
    {
        this._formaldefs_.clear();
        this._formaldefs_.addAll(list);
        for(PFormaldef e : list)
        {
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
        }
    }

    public LinkedList<PSuperclass> getSuperclasses()
    {
        return this._superclasses_;
    }

    public void setSuperclasses(List<PSuperclass> list)
    {
        this._superclasses_.clear();
        this._superclasses_.addAll(list);
        for(PSuperclass e : list)
        {
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
        }
    }

    public LinkedList<PPropdef> getPropdefs()
    {
        return this._propdefs_;
    }

    public void setPropdefs(List<PPropdef> list)
    {
        this._propdefs_.clear();
        this._propdefs_.addAll(list);
        for(PPropdef e : list)
        {
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
        }
    }

    public TKwend getKwend()
    {
        return this._kwend_;
    }

    public void setKwend(TKwend node)
    {
        if(this._kwend_ != null)
        {
            this._kwend_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._kwend_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._doc_)
            + toString(this._kwredef_)
            + toString(this._visibility_)
            + toString(this._classkind_)
            + toString(this._id_)
            + toString(this._formaldefs_)
            + toString(this._superclasses_)
            + toString(this._propdefs_)
            + toString(this._kwend_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._doc_ == child)
        {
            this._doc_ = null;
            return;
        }

        if(this._kwredef_ == child)
        {
            this._kwredef_ = null;
            return;
        }

        if(this._visibility_ == child)
        {
            this._visibility_ = null;
            return;
        }

        if(this._classkind_ == child)
        {
            this._classkind_ = null;
            return;
        }

        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._formaldefs_.remove(child))
        {
            return;
        }

        if(this._superclasses_.remove(child))
        {
            return;
        }

        if(this._propdefs_.remove(child))
        {
            return;
        }

        if(this._kwend_ == child)
        {
            this._kwend_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._doc_ == oldChild)
        {
            setDoc((PDoc) newChild);
            return;
        }

        if(this._kwredef_ == oldChild)
        {
            setKwredef((TKwredef) newChild);
            return;
        }

        if(this._visibility_ == oldChild)
        {
            setVisibility((PVisibility) newChild);
            return;
        }

        if(this._classkind_ == oldChild)
        {
            setClasskind((PClasskind) newChild);
            return;
        }

        if(this._id_ == oldChild)
        {
            setId((TClassid) newChild);
            return;
        }

        for(ListIterator<PFormaldef> i = this._formaldefs_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PFormaldef) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        for(ListIterator<PSuperclass> i = this._superclasses_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PSuperclass) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        for(ListIterator<PPropdef> i = this._propdefs_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PPropdef) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._kwend_ == oldChild)
        {
            setKwend((TKwend) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
