/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.nitlanguage.gen.node;

import org.nitlanguage.gen.analysis.Analysis;

@SuppressWarnings("nls")
public final class AArrayExpr extends PExpr
{
    private PExprs _exprs_;

    public AArrayExpr()
    {
        // Constructor
    }

    public AArrayExpr(
        @SuppressWarnings("hiding") PExprs _exprs_)
    {
        // Constructor
        setExprs(_exprs_);

    }

    @Override
    public Object clone()
    {
        return new AArrayExpr(
            cloneNode(this._exprs_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAArrayExpr(this);
    }

    public PExprs getExprs()
    {
        return this._exprs_;
    }

    public void setExprs(PExprs node)
    {
        if(this._exprs_ != null)
        {
            this._exprs_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exprs_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._exprs_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._exprs_ == child)
        {
            this._exprs_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._exprs_ == oldChild)
        {
            setExprs((PExprs) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
