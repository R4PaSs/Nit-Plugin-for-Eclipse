/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.nitlanguage.gen.simplec.node;

import java.util.*;
import org.nitlanguage.gen.simplec.analysis.*;

public final class AEnumTypeSpecifier extends PTypeSpecifier
{
    private PEnumSpecifier _enumSpecifier_;

    public AEnumTypeSpecifier()
    {
    }

    public AEnumTypeSpecifier(
        PEnumSpecifier _enumSpecifier_)
    {
        setEnumSpecifier(_enumSpecifier_);

    }
    public Object clone()
    {
        return new AEnumTypeSpecifier(
            (PEnumSpecifier) cloneNode(_enumSpecifier_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEnumTypeSpecifier(this);
    }

    public PEnumSpecifier getEnumSpecifier()
    {
        return _enumSpecifier_;
    }

    public void setEnumSpecifier(PEnumSpecifier node)
    {
        if(_enumSpecifier_ != null)
        {
            _enumSpecifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _enumSpecifier_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_enumSpecifier_);
    }

    void removeChild(Node child)
    {
        if(_enumSpecifier_ == child)
        {
            _enumSpecifier_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_enumSpecifier_ == oldChild)
        {
            setEnumSpecifier((PEnumSpecifier) newChild);
            return;
        }

    }
}
