/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.nitlanguage.gen.simplec.node;

import java.util.*;
import org.nitlanguage.gen.simplec.analysis.*;

public final class AStructDeclaration extends PStructDeclaration
{
    private TStruct _struct_;
    private TIdentifier _identifier_;
    private TLBrace _lBrace_;
    private final LinkedList _memberDeclaration_ = new TypedLinkedList(new MemberDeclaration_Cast());
    private TRBrace _rBrace_;
    private TSemicolon _semicolon_;

    public AStructDeclaration()
    {
    }

    public AStructDeclaration(
        TStruct _struct_,
        TIdentifier _identifier_,
        TLBrace _lBrace_,
        List _memberDeclaration_,
        TRBrace _rBrace_,
        TSemicolon _semicolon_)
    {
        setStruct(_struct_);

        setIdentifier(_identifier_);

        setLBrace(_lBrace_);

        {
            this._memberDeclaration_.clear();
            this._memberDeclaration_.addAll(_memberDeclaration_);
        }

        setRBrace(_rBrace_);

        setSemicolon(_semicolon_);

    }

    public AStructDeclaration(
        TStruct _struct_,
        TIdentifier _identifier_,
        TLBrace _lBrace_,
        XPMemberDeclaration _memberDeclaration_,
        TRBrace _rBrace_,
        TSemicolon _semicolon_)
    {
        setStruct(_struct_);

        setIdentifier(_identifier_);

        setLBrace(_lBrace_);

        if(_memberDeclaration_ != null)
        {
            while(_memberDeclaration_ instanceof X1PMemberDeclaration)
            {
                this._memberDeclaration_.addFirst(((X1PMemberDeclaration) _memberDeclaration_).getPMemberDeclaration());
                _memberDeclaration_ = ((X1PMemberDeclaration) _memberDeclaration_).getXPMemberDeclaration();
            }
            this._memberDeclaration_.addFirst(((X2PMemberDeclaration) _memberDeclaration_).getPMemberDeclaration());
        }

        setRBrace(_rBrace_);

        setSemicolon(_semicolon_);

    }
    public Object clone()
    {
        return new AStructDeclaration(
            (TStruct) cloneNode(_struct_),
            (TIdentifier) cloneNode(_identifier_),
            (TLBrace) cloneNode(_lBrace_),
            cloneList(_memberDeclaration_),
            (TRBrace) cloneNode(_rBrace_),
            (TSemicolon) cloneNode(_semicolon_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStructDeclaration(this);
    }

    public TStruct getStruct()
    {
        return _struct_;
    }

    public void setStruct(TStruct node)
    {
        if(_struct_ != null)
        {
            _struct_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _struct_ = node;
    }

    public TIdentifier getIdentifier()
    {
        return _identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(_identifier_ != null)
        {
            _identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _identifier_ = node;
    }

    public TLBrace getLBrace()
    {
        return _lBrace_;
    }

    public void setLBrace(TLBrace node)
    {
        if(_lBrace_ != null)
        {
            _lBrace_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lBrace_ = node;
    }

    public LinkedList getMemberDeclaration()
    {
        return _memberDeclaration_;
    }

    public void setMemberDeclaration(List list)
    {
        _memberDeclaration_.clear();
        _memberDeclaration_.addAll(list);
    }

    public TRBrace getRBrace()
    {
        return _rBrace_;
    }

    public void setRBrace(TRBrace node)
    {
        if(_rBrace_ != null)
        {
            _rBrace_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _rBrace_ = node;
    }

    public TSemicolon getSemicolon()
    {
        return _semicolon_;
    }

    public void setSemicolon(TSemicolon node)
    {
        if(_semicolon_ != null)
        {
            _semicolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _semicolon_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_struct_)
            + toString(_identifier_)
            + toString(_lBrace_)
            + toString(_memberDeclaration_)
            + toString(_rBrace_)
            + toString(_semicolon_);
    }

    void removeChild(Node child)
    {
        if(_struct_ == child)
        {
            _struct_ = null;
            return;
        }

        if(_identifier_ == child)
        {
            _identifier_ = null;
            return;
        }

        if(_lBrace_ == child)
        {
            _lBrace_ = null;
            return;
        }

        if(_memberDeclaration_.remove(child))
        {
            return;
        }

        if(_rBrace_ == child)
        {
            _rBrace_ = null;
            return;
        }

        if(_semicolon_ == child)
        {
            _semicolon_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_struct_ == oldChild)
        {
            setStruct((TStruct) newChild);
            return;
        }

        if(_identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

        if(_lBrace_ == oldChild)
        {
            setLBrace((TLBrace) newChild);
            return;
        }

        for(ListIterator i = _memberDeclaration_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set(newChild);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(_rBrace_ == oldChild)
        {
            setRBrace((TRBrace) newChild);
            return;
        }

        if(_semicolon_ == oldChild)
        {
            setSemicolon((TSemicolon) newChild);
            return;
        }

    }

    private class MemberDeclaration_Cast implements Cast
    {
        public Object cast(Object o)
        {
            PMemberDeclaration node = (PMemberDeclaration) o;

            if((node.parent() != null) &&
                (node.parent() != AStructDeclaration.this))
            {
                node.parent().removeChild(node);
            }

            if((node.parent() == null) ||
                (node.parent() != AStructDeclaration.this))
            {
                node.parent(AStructDeclaration.this);
            }

            return node;
        }
    }
}
