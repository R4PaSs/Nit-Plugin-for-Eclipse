/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.nitlanguage.gen.simplec.node;

import java.util.*;
import org.nitlanguage.gen.simplec.analysis.*;

public final class ADirectModifyExpression extends PModifyExpression
{
    private PVarname _varname_;
    private TEqual _equal_;
    private PRhs _rhs_;

    public ADirectModifyExpression()
    {
    }

    public ADirectModifyExpression(
        PVarname _varname_,
        TEqual _equal_,
        PRhs _rhs_)
    {
        setVarname(_varname_);

        setEqual(_equal_);

        setRhs(_rhs_);

    }
    public Object clone()
    {
        return new ADirectModifyExpression(
            (PVarname) cloneNode(_varname_),
            (TEqual) cloneNode(_equal_),
            (PRhs) cloneNode(_rhs_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADirectModifyExpression(this);
    }

    public PVarname getVarname()
    {
        return _varname_;
    }

    public void setVarname(PVarname node)
    {
        if(_varname_ != null)
        {
            _varname_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _varname_ = node;
    }

    public TEqual getEqual()
    {
        return _equal_;
    }

    public void setEqual(TEqual node)
    {
        if(_equal_ != null)
        {
            _equal_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _equal_ = node;
    }

    public PRhs getRhs()
    {
        return _rhs_;
    }

    public void setRhs(PRhs node)
    {
        if(_rhs_ != null)
        {
            _rhs_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _rhs_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_varname_)
            + toString(_equal_)
            + toString(_rhs_);
    }

    void removeChild(Node child)
    {
        if(_varname_ == child)
        {
            _varname_ = null;
            return;
        }

        if(_equal_ == child)
        {
            _equal_ = null;
            return;
        }

        if(_rhs_ == child)
        {
            _rhs_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_varname_ == oldChild)
        {
            setVarname((PVarname) newChild);
            return;
        }

        if(_equal_ == oldChild)
        {
            setEqual((TEqual) newChild);
            return;
        }

        if(_rhs_ == oldChild)
        {
            setRhs((PRhs) newChild);
            return;
        }

    }
}
