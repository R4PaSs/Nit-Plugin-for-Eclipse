/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.nitlanguage.gen.simplec.node;

import org.nitlanguage.gen.simplec.analysis.*;

public final class X1PAdditionalEnumerator extends XPAdditionalEnumerator
{
    private XPAdditionalEnumerator _xPAdditionalEnumerator_;
    private PAdditionalEnumerator _pAdditionalEnumerator_;

    public X1PAdditionalEnumerator()
    {
    }

    public X1PAdditionalEnumerator(
        XPAdditionalEnumerator _xPAdditionalEnumerator_,
        PAdditionalEnumerator _pAdditionalEnumerator_)
    {
        setXPAdditionalEnumerator(_xPAdditionalEnumerator_);
        setPAdditionalEnumerator(_pAdditionalEnumerator_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPAdditionalEnumerator getXPAdditionalEnumerator()
    {
        return _xPAdditionalEnumerator_;
    }

    public void setXPAdditionalEnumerator(XPAdditionalEnumerator node)
    {
        if(_xPAdditionalEnumerator_ != null)
        {
            _xPAdditionalEnumerator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPAdditionalEnumerator_ = node;
    }

    public PAdditionalEnumerator getPAdditionalEnumerator()
    {
        return _pAdditionalEnumerator_;
    }

    public void setPAdditionalEnumerator(PAdditionalEnumerator node)
    {
        if(_pAdditionalEnumerator_ != null)
        {
            _pAdditionalEnumerator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pAdditionalEnumerator_ = node;
    }

    void removeChild(Node child)
    {
        if(_xPAdditionalEnumerator_ == child)
        {
            _xPAdditionalEnumerator_ = null;
        }

        if(_pAdditionalEnumerator_ == child)
        {
            _pAdditionalEnumerator_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPAdditionalEnumerator_) +
            toString(_pAdditionalEnumerator_);
    }
}
