/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.nitlanguage.gen.simplec.node;

import java.util.*;
import org.nitlanguage.gen.simplec.analysis.*;

public final class AAddressUnaryExpression extends PUnaryExpression
{
    private TLPar _lPar_;
    private TAmpersand _ampersand_;
    private PVarname _varname_;
    private TRPar _rPar_;

    public AAddressUnaryExpression()
    {
    }

    public AAddressUnaryExpression(
        TLPar _lPar_,
        TAmpersand _ampersand_,
        PVarname _varname_,
        TRPar _rPar_)
    {
        setLPar(_lPar_);

        setAmpersand(_ampersand_);

        setVarname(_varname_);

        setRPar(_rPar_);

    }
    public Object clone()
    {
        return new AAddressUnaryExpression(
            (TLPar) cloneNode(_lPar_),
            (TAmpersand) cloneNode(_ampersand_),
            (PVarname) cloneNode(_varname_),
            (TRPar) cloneNode(_rPar_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAddressUnaryExpression(this);
    }

    public TLPar getLPar()
    {
        return _lPar_;
    }

    public void setLPar(TLPar node)
    {
        if(_lPar_ != null)
        {
            _lPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lPar_ = node;
    }

    public TAmpersand getAmpersand()
    {
        return _ampersand_;
    }

    public void setAmpersand(TAmpersand node)
    {
        if(_ampersand_ != null)
        {
            _ampersand_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _ampersand_ = node;
    }

    public PVarname getVarname()
    {
        return _varname_;
    }

    public void setVarname(PVarname node)
    {
        if(_varname_ != null)
        {
            _varname_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _varname_ = node;
    }

    public TRPar getRPar()
    {
        return _rPar_;
    }

    public void setRPar(TRPar node)
    {
        if(_rPar_ != null)
        {
            _rPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _rPar_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_lPar_)
            + toString(_ampersand_)
            + toString(_varname_)
            + toString(_rPar_);
    }

    void removeChild(Node child)
    {
        if(_lPar_ == child)
        {
            _lPar_ = null;
            return;
        }

        if(_ampersand_ == child)
        {
            _ampersand_ = null;
            return;
        }

        if(_varname_ == child)
        {
            _varname_ = null;
            return;
        }

        if(_rPar_ == child)
        {
            _rPar_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_lPar_ == oldChild)
        {
            setLPar((TLPar) newChild);
            return;
        }

        if(_ampersand_ == oldChild)
        {
            setAmpersand((TAmpersand) newChild);
            return;
        }

        if(_varname_ == oldChild)
        {
            setVarname((PVarname) newChild);
            return;
        }

        if(_rPar_ == oldChild)
        {
            setRPar((TRPar) newChild);
            return;
        }

    }
}
