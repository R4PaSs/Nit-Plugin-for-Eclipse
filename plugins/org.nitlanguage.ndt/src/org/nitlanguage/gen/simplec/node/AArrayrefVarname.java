/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.nitlanguage.gen.simplec.node;

import java.util.*;
import org.nitlanguage.gen.simplec.analysis.*;

public final class AArrayrefVarname extends PVarname
{
    private PArrayref _arrayref_;

    public AArrayrefVarname()
    {
    }

    public AArrayrefVarname(
        PArrayref _arrayref_)
    {
        setArrayref(_arrayref_);

    }
    public Object clone()
    {
        return new AArrayrefVarname(
            (PArrayref) cloneNode(_arrayref_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAArrayrefVarname(this);
    }

    public PArrayref getArrayref()
    {
        return _arrayref_;
    }

    public void setArrayref(PArrayref node)
    {
        if(_arrayref_ != null)
        {
            _arrayref_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _arrayref_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_arrayref_);
    }

    void removeChild(Node child)
    {
        if(_arrayref_ == child)
        {
            _arrayref_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_arrayref_ == oldChild)
        {
            setArrayref((PArrayref) newChild);
            return;
        }

    }
}
