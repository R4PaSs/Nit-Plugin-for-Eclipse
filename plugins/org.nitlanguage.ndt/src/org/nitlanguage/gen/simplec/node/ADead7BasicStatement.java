/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.nitlanguage.gen.simplec.node;

import java.util.*;
import org.nitlanguage.gen.simplec.analysis.*;

public final class ADead7BasicStatement extends PBasicStatement
{
    private TLPar _lPar_;
    private PTypeName _typeName_;
    private TRPar _rPar_;
    private PConstant _constant_;

    public ADead7BasicStatement()
    {
    }

    public ADead7BasicStatement(
        TLPar _lPar_,
        PTypeName _typeName_,
        TRPar _rPar_,
        PConstant _constant_)
    {
        setLPar(_lPar_);

        setTypeName(_typeName_);

        setRPar(_rPar_);

        setConstant(_constant_);

    }
    public Object clone()
    {
        return new ADead7BasicStatement(
            (TLPar) cloneNode(_lPar_),
            (PTypeName) cloneNode(_typeName_),
            (TRPar) cloneNode(_rPar_),
            (PConstant) cloneNode(_constant_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADead7BasicStatement(this);
    }

    public TLPar getLPar()
    {
        return _lPar_;
    }

    public void setLPar(TLPar node)
    {
        if(_lPar_ != null)
        {
            _lPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lPar_ = node;
    }

    public PTypeName getTypeName()
    {
        return _typeName_;
    }

    public void setTypeName(PTypeName node)
    {
        if(_typeName_ != null)
        {
            _typeName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _typeName_ = node;
    }

    public TRPar getRPar()
    {
        return _rPar_;
    }

    public void setRPar(TRPar node)
    {
        if(_rPar_ != null)
        {
            _rPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _rPar_ = node;
    }

    public PConstant getConstant()
    {
        return _constant_;
    }

    public void setConstant(PConstant node)
    {
        if(_constant_ != null)
        {
            _constant_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _constant_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_lPar_)
            + toString(_typeName_)
            + toString(_rPar_)
            + toString(_constant_);
    }

    void removeChild(Node child)
    {
        if(_lPar_ == child)
        {
            _lPar_ = null;
            return;
        }

        if(_typeName_ == child)
        {
            _typeName_ = null;
            return;
        }

        if(_rPar_ == child)
        {
            _rPar_ = null;
            return;
        }

        if(_constant_ == child)
        {
            _constant_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_lPar_ == oldChild)
        {
            setLPar((TLPar) newChild);
            return;
        }

        if(_typeName_ == oldChild)
        {
            setTypeName((PTypeName) newChild);
            return;
        }

        if(_rPar_ == oldChild)
        {
            setRPar((TRPar) newChild);
            return;
        }

        if(_constant_ == oldChild)
        {
            setConstant((PConstant) newChild);
            return;
        }

    }
}
