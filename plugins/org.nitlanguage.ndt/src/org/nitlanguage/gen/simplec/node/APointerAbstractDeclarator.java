/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.nitlanguage.gen.simplec.node;

import java.util.*;
import org.nitlanguage.gen.simplec.analysis.*;

public final class APointerAbstractDeclarator extends PAbstractDeclarator
{
    private PAbstractPointer _abstractPointer_;

    public APointerAbstractDeclarator()
    {
    }

    public APointerAbstractDeclarator(
        PAbstractPointer _abstractPointer_)
    {
        setAbstractPointer(_abstractPointer_);

    }
    public Object clone()
    {
        return new APointerAbstractDeclarator(
            (PAbstractPointer) cloneNode(_abstractPointer_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPointerAbstractDeclarator(this);
    }

    public PAbstractPointer getAbstractPointer()
    {
        return _abstractPointer_;
    }

    public void setAbstractPointer(PAbstractPointer node)
    {
        if(_abstractPointer_ != null)
        {
            _abstractPointer_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _abstractPointer_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_abstractPointer_);
    }

    void removeChild(Node child)
    {
        if(_abstractPointer_ == child)
        {
            _abstractPointer_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_abstractPointer_ == oldChild)
        {
            setAbstractPointer((PAbstractPointer) newChild);
            return;
        }

    }
}
