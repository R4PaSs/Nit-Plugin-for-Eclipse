/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.nitlanguage.gen.simplec.node;

import java.util.*;
import org.nitlanguage.gen.simplec.analysis.*;

public final class AIdentifierFunctionDefinition extends PFunctionDefinition
{
    private TIdentifier _identifier_;
    private PFunctionDeclarator _functionDeclarator_;
    private PFunctionBody _functionBody_;

    public AIdentifierFunctionDefinition()
    {
    }

    public AIdentifierFunctionDefinition(
        TIdentifier _identifier_,
        PFunctionDeclarator _functionDeclarator_,
        PFunctionBody _functionBody_)
    {
        setIdentifier(_identifier_);

        setFunctionDeclarator(_functionDeclarator_);

        setFunctionBody(_functionBody_);

    }
    public Object clone()
    {
        return new AIdentifierFunctionDefinition(
            (TIdentifier) cloneNode(_identifier_),
            (PFunctionDeclarator) cloneNode(_functionDeclarator_),
            (PFunctionBody) cloneNode(_functionBody_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIdentifierFunctionDefinition(this);
    }

    public TIdentifier getIdentifier()
    {
        return _identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(_identifier_ != null)
        {
            _identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _identifier_ = node;
    }

    public PFunctionDeclarator getFunctionDeclarator()
    {
        return _functionDeclarator_;
    }

    public void setFunctionDeclarator(PFunctionDeclarator node)
    {
        if(_functionDeclarator_ != null)
        {
            _functionDeclarator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _functionDeclarator_ = node;
    }

    public PFunctionBody getFunctionBody()
    {
        return _functionBody_;
    }

    public void setFunctionBody(PFunctionBody node)
    {
        if(_functionBody_ != null)
        {
            _functionBody_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _functionBody_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_identifier_)
            + toString(_functionDeclarator_)
            + toString(_functionBody_);
    }

    void removeChild(Node child)
    {
        if(_identifier_ == child)
        {
            _identifier_ = null;
            return;
        }

        if(_functionDeclarator_ == child)
        {
            _functionDeclarator_ = null;
            return;
        }

        if(_functionBody_ == child)
        {
            _functionBody_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

        if(_functionDeclarator_ == oldChild)
        {
            setFunctionDeclarator((PFunctionDeclarator) newChild);
            return;
        }

        if(_functionBody_ == oldChild)
        {
            setFunctionBody((PFunctionBody) newChild);
            return;
        }

    }
}
