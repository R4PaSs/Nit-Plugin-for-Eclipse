/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.nitlanguage.gen.simplec.node;

import java.util.*;
import org.nitlanguage.gen.simplec.analysis.*;

public final class AComprefVarname extends PVarname
{
    private PCompref _compref_;

    public AComprefVarname()
    {
    }

    public AComprefVarname(
        PCompref _compref_)
    {
        setCompref(_compref_);

    }
    public Object clone()
    {
        return new AComprefVarname(
            (PCompref) cloneNode(_compref_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAComprefVarname(this);
    }

    public PCompref getCompref()
    {
        return _compref_;
    }

    public void setCompref(PCompref node)
    {
        if(_compref_ != null)
        {
            _compref_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _compref_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_compref_);
    }

    void removeChild(Node child)
    {
        if(_compref_ == child)
        {
            _compref_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_compref_ == oldChild)
        {
            setCompref((PCompref) newChild);
            return;
        }

    }
}
